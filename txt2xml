#!/usr/bin/perl -w

# Old version of the code used to generate my web pages and by blog.

use strict;

use constant TRUE  => (0==0);
use constant FALSE => (0==1);

use constant NONE       => 0;
use constant TEXT       => 1;
use constant CODE       => 2;
use constant SECTION    => 3;
use constant SUBSECTION => 4;
use constant TITLE      => 5;

use Getopt::Long;
our $utf8 = FALSE;
our $toc = FALSE;
GetOptions('utf8' => \$utf8, 'toc' => \$toc);


our $type = TITLE;

our $result = "";

sub affiche { foreach my $a (@_){ $result .= $a } }

if($utf8) {
  affiche "<?xml version=\"1.0\" encoding=\"utf-8\" ?>";
} else {
  affiche "<?xml version=\"1.0\" encoding=\"iso-8859-1\" ?>";
}
affiche "<web>
  <head>
    <title>";

while(<>){
  # Empty line after the document or section titles
  if( m/^\s*$/ ){
    print STDERR "Empty line: $_";
    if( $type == TITLE ){
      affiche "</title></head>\n";
      affiche "<toc/>\n" if $toc;
    } elsif($type == SECTION ){
      affiche "</h1>";
    } elsif($type == SUBSECTION ){
      affiche "</h2>";
    } elsif($type == TEXT ){
      affiche "</p>";
    } 
    $type = NONE unless $type == CODE;
  }
  # Line starting with "="
  elsif( s/^\=\s*(.*)// ){
    print STDERR "Image: $1\n";
    if( $type == NONE ){
      affiche "<img src=\"$1\"/>";
    } elsif( $type == CODE ){
      affiche "</code>";
      $type = NONE;
      affiche "<img src=\"$1\"/>";
    } else {
      die "Missing empty line?";
    }
  }
  # Non-empty line starting with two spaces
  elsif( s/^\s\s// ){
    print STDERR "Code:       $_";
    if( $type == NONE ){
      affiche "<code>\n";
    } elsif( $type != CODE ){
      die "Missing empty line?\n";
    }
    $type = CODE;
  }
  # Line starting with * 
  elsif( s/^\*\s*// ){
    print STDERR "Section:    $_";
    if( $type == CODE ){
      affiche "</code>\n\n<h1>";
    } elsif( $type == NONE ){
      affiche "<h1>";
    } else { die "Missing empty line ?" }
    $type = SECTION;
  }
  # Line starting with +
  elsif( s/^\+\s*// ){
    print STDERR "Subsection: $_";
    if( $type == CODE ){
      affiche "</code>\n\n<h2>";
    } elsif( $type == NONE ){
      affiche "<h2>";
    } else { die "Missing empty line ?" }
    $type = SUBSECTION;
  }
  # Line starting with something else: text
  elsif( m/^[^\s]/ and ($type != TITLE) ){
    print STDERR "Text:       $_";
    if( $type == CODE ){
      affiche "</code><p>\n";
    } elsif( $type == NONE ){
      affiche "<p>\n";
    } elsif( $type != TEXT ){
      die "Missing empty line?";
    }
    $type = TEXT;
  }

  # Escape < and &
  # Try to recognize URLs
  {
    my $a = $_;
    my $b = "";
    while( $a =~ s#^(.*?)(URL:[^\s"]+|(ftp|http)://[^\s"]+)## ){
      my $c = $1;
      my $d = $2;
      print STDERR "URL: $d\n";
      $c =~ s/\&/\&amp\;/g;
      $c =~ s/\</\&lt\;/g;
      $d =~ s/^URL://;
      $d =~ s/^"//; $d =~ s/"$//;
      my $dd = $d;
      $dd =~ s/\&/\&amp\;/g;
      $b .= $c . "<a href=\"$dd\">$dd</a>";
    }
    $a =~ s/\&/\&amp\;/g; $a =~ s/\</\&lt\;/g;
    $b .= $a;
    $_ = $b;
  }

  affiche $_;
}

if( $type == TEXT ){
  affiche "</p>";
} elsif( $type == CODE ){
  affiche "</code>";
} elsif( $type == SECTION ){
  affiche "</h1>";
} elsif( $type == TITLE ){
  affiche "</title></head>";
}
affiche "</web>\n";

######################################################################

## Cleaning

$result =~ s#\s*\<\/code\>#</code>#gsm;
$result =~ s#\s*\<\/h1\>#</h1>#gsm;
$result =~ s#\s*\<\/title\>#</title>#gsm;

######################################################################

print $result;
